v0.7.1
-- Updated RealtimeUpdates#list_subscriptions and GraphAPI#get_connections to now return an 
array of results directly (rather than a hash with one key)
-- Fixed a bug with Net::HTTP-based HTTP service in which the headers hash was improperly formatted
-- Updated readme

v0.7.0
-- Added RealtimeUpdates class, which can be used to manage subscriptions for user updates (see http://developers.facebook.com/docs/api/realtime)
-- Added picture method to graph API, which fetches an object's picture from the redirect headers.
-- Added _greatly_ improved testing with result mocking, which is now the default set of tests
-- Renamed live testing spec to koala_spec_without_mocks.rb
-- Added Koala::Response class, which encapsulates HTTP results since Facebook sometimes sends data in the status or headers
-- Much internal refactoring
-- Updated readme, changelog, etc.


v0.6.0
-- Added support for the old REST API thanks to cbaclig's great work
-- Updated tests to conform to RSpec standards
-- Updated changelog, readme, etc.

v0.5.1
-- Documentation is now on the wiki, updated readme accordingly.

v0.5.0
-- Added several new OAuth methods for making and parsing access token requests
-- Added test suite for the OAuth class
-- Made second argument to url_for_access_token a hash (strings still work but trigger a deprecation warning)
-- Added fields to facebook_data.yml
-- Updated readme

v0.4.1
-- Encapsulated GraphAPI and OAuth classes in the Koala::Facebook module for clarity (and to avoid claiming the global Facebook class)
-- Moved make_request method to Koala class from GraphAPI instance (for use by future OAuth class functionality)
-- Renamed request method to api for consistancy with Javascript library
-- Updated tests and readme

v0.4.0
-- Adopted the Koala name
-- Updated readme and tests
-- Fixed cookie verification bug for non-expiring OAuth tokens

v0.3.1
-- Bug fixes.

v0.3
-- Renamed Graph API class from Facebook::GraphAPI to FacebookGraph::API
-- Created FacebookGraph::OAuth class for tokens and OAuth URLs
-- Updated method for including HTTP service (think we've got it this time) 
-- Updated tests
-- Added CHANGELOG and gemspec

v0.2
-- Gemified the project
-- Split out HTTP services into their own file, and adjusted inclusion method

v0.1
-- Added modular support for Typhoeus
-- Added tests

v0.0
-- Hi from F8!  Basic read/write from the graph is working